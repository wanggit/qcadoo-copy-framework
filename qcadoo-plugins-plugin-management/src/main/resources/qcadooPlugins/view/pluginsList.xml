<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo Framework
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view" 
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="pluginsList"
	modelPlugin="qcadooPlugin"
	modelName="plugin"
	menuAccessible="true"
	defaultAuthorizationRole="ROLE_SUPERADMIN">
	
	<component type="window" name="window" reference="window">
		<ribbon>
			<group name="plugins">
				<bigButton name="downloadPlugin" icon="downloadIcon24.png"
					action="#{grid}.fireEvent(downloadPlugin);" message="qcadooPlugins.ribbon.messages.download" />
			</group>
			<group name="actions">
				<bigButton name="changeStatus" icon="enableIcon24.png"
					state="disabled">
					<script>
						<![CDATA[
							this.element.width(100);
							this.removeOnChangeListeners();
							this.addOnChangeListener({
								onClick: function() {
									if (this.state == "enable") {
										if (window.confirm("#{translate(qcadooPlugins.ribbon.confirms.enable)}")) {
											#{grid}.performEvent('enablePlugin', []);
										};
									} else if (this.state == "disable") {
										if (window.confirm("#{translate(qcadooPlugins.ribbon.confirms.disable)}")) {
											#{grid}.performEvent('disablePlugin', []);
										};
									}
								}
							});
						]]>
					</script>
				</bigButton>
				<smallButton name="remove" icon="deleteIcon16.png"
					state="disabled">
					<script>
						<![CDATA[
							this.removeOnChangeListeners();
							this.addOnChangeListener({
								onClick: function() {
									if (window.confirm("#{translate(qcadooPlugins.ribbon.confirms.remove)}")) {
										#{grid}.performEvent('removePlugin', []);
									}
								}
							});
						]]>
					</script>
				</smallButton>
			</group>
		</ribbon>
		<component type="grid" name="plugins" reference="grid">
			<option type="column" name="name" fields="name" link="true"
				width="100" />
			<option type="column" name="identifier" fields="identifier"
				link="true" width="80" />
			<option type="column" name="groupName" fields="groupName" width="100" />
			<option type="column" name="vendor" fields="vendor" width="100" />
			<option type="column" name="version" fields="version" width="40" />
			<option type="column" name="state" fields="state" width="60" />
			<option type="column" name="license" fields="license" width="60" />
			<option type="column" name="isSystem" fields="isSystem" width="60" />
			<option type="order" column="identifier" direction="asc" />
			<option type="correspondingView" value="qcadooPlugins/pluginDetails" />
			<option type="correspondingComponent" value="form" />
			<option type="correspondingViewInModal" value="true" />
			<option type="searchable" value="identifier,version,state,isSystem,groupName,license" />
			<option type="orderable" value="identifier,version,state,isSystem,groupName,license" />
			<option type="paginable" value="true" />
			<option type="deletable" value="false" />
			<option type="creatable" value="false" />
			<option type="fullscreen" value="true" />
			<option type="multiselect" value="true" />
			<listener event="downloadPlugin"
				class="com.qcadoo.plugins.plugins.internal.PluginManagmentViewHook"
				method="onDownloadButtonClick" />
			<listener event="enablePlugin"
				class="com.qcadoo.plugins.plugins.internal.PluginManagmentViewHook"
				method="onEnableButtonClick" />
			<listener event="disablePlugin"
				class="com.qcadoo.plugins.plugins.internal.PluginManagmentViewHook"
				method="onDisableButtonClick" />
			<listener event="removePlugin"
				class="com.qcadoo.plugins.plugins.internal.PluginManagmentViewHook"
				method="onRemoveButtonClick" />
			<script>
				<![CDATA[
					var downloadRibbonItem = #{window}.getRibbonItem("plugins.downloadPlugin");
					var changeStatusRibbonItem = #{window}.getRibbonItem("actions.changeStatus");
					var removeRibbonItem = #{window}.getRibbonItem("actions.remove");
					this.removeOnChangeListeners();
					this.addOnChangeListener({
						onChange: function(selectedEntitiesArray) {
							if (selectedEntitiesArray.length == 0) {
								changeStatusRibbonItem.disable();
								removeRibbonItem.disable();
							} else {
								var anySystem = false;
								var allEnabled = true;
								var noneEnabled = true;
								for (var i in selectedEntitiesArray) {
									if (selectedEntitiesArray[i].fields.isSystem == "1") {
										anySystem = true;
										break;
									}
									var state = selectedEntitiesArray[i].fields.state;
									if (state == 'ENABLED') {
										noneEnabled = false;
									} else {
										allEnabled = false;
									}
									
								}
								if (anySystem) {
									changeStatusRibbonItem.disable("#{translate(qcadooPlugins.ribbon.messages.base)}");
									removeRibbonItem.disable("#{translate(qcadooPlugins.ribbon.messages.base)}");
								} else {
									removeRibbonItem.enable("#{translate(qcadooPlugins.ribbon.messages.remove)}");
									if (allEnabled) {
										changeStatusRibbonItem.enable();
										changeStatusRibbonItem.state = "disable";
										changeStatusRibbonItem.setLabel("#{translate(qcadooPlugins.pluginsList.window.ribbon.actions.disable)}");
										changeStatusRibbonItem.setIcon('disableIcon24.png');
									} else if (noneEnabled) {
										changeStatusRibbonItem.enable();
										changeStatusRibbonItem.state = "enable";
										changeStatusRibbonItem.setLabel("#{translate(qcadooPlugins.pluginsList.window.ribbon.actions.changeStatus)}");
										changeStatusRibbonItem.setIcon('enableIcon24.png');
									} else {
										changeStatusRibbonItem.disable("#{translate(qcadooPlugins.ribbon.messages.mixedStatus)}");
									}
								}
							}
						}
					});
				]]>
			</script>
		</component>
		<option type="fixedHeight" value="true" />
		<option type="header" value="false" />
		<script>
			<![CDATA[
				this.addOnChangeListener({
					onSetValue: function(selectedEntitiesArray) {
						this.updateMenu();
					}
				});
			]]>
		</script>
	</component>
</view>