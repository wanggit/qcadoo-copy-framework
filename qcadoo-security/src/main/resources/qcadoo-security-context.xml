<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo Framework
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
       http://www.springframework.org/schema/security 
       http://www.springframework.org/schema/security/spring-security-3.2.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.1.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:spring-configured/>
    <context:component-scan base-package="com.qcadoo.security"/>

    <security:global-method-security
            pre-post-annotations="enabled">
        <security:expression-handler ref="methodSecurityExpressionHandler"/>
    </security:global-method-security>

    <security:http pattern="/browserNotSupported.html" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/v2/api-docs.json" security="none"/>
    <security:http pattern="/rest/asana/notification" security="none"/>
    <security:http pattern="/rest/planner/positions" security="none"/>

    <security:http use-expressions="true" auto-config="false"
                   entry-point-ref="loginUrlAuthenticationEntryPoint">

        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>

        <security:csrf request-matcher-ref="csrfRequestMatcher"/>

        <security:intercept-url pattern="/passwordReset.html" access="permitAll"/>
        <security:intercept-url pattern="/passwordChange.html" access="permitAll"/>
        <security:intercept-url pattern="/login.html" access="permitAll"/>

        <security:intercept-url pattern="/**"
                                access="isAuthenticated()"/>

        <security:logout logout-success-url="/login.html?logout=true"/>

        <security:session-management session-authentication-strategy-ref="sas"
                                     invalid-session-url="/login.html?timeout=true">
        </security:session-management>

        <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter"/>
        <security:custom-filter ref="mySessionExpirationFilter"
                                before="FORM_LOGIN_FILTER"/>

        <security:custom-filter ref="customAuthenticationFilter"
                                position="FORM_LOGIN_FILTER"/>

        <security:access-denied-handler ref="accessDeniedHandler"/>

        <security:http-basic/>

        <security:remember-me user-service-ref="userDetailsService"
                              token-repository-ref="userDetailsService" services-alias="rememberMeServices"
                              key="qcd01"/>

    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider
                user-service-ref="userDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="csrfRequestMatcher" class="com.qcadoo.security.internal.matchers.CustomCsrfRequestMatcher"/>

    <bean id="passwordEncoder" class="com.qcadoo.security.internal.password.SelectablePasswordEncoder">
        <property name="encoder" value="${passwordEncoder:bcrypt}"/>
        <property name="bcryptPasswordEncoder">
            <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
                <constructor-arg name="strength" value="11" />
            </bean>
        </property>
        <property name="shaPasswordEncoder">
            <bean class="com.qcadoo.security.internal.password.ShaPasswordEncoderAdapter">
                <constructor-arg>
                    <bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
                        <constructor-arg value="256"/>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="globalDefinitionPermissionEvaluator"
          class="com.qcadoo.security.internal.QcadooGlobalPermissionEvaluator">
        <property name="qcadooEvaluators">
            <set>
                <bean
                        class="com.qcadoo.view.internal.security.ViewDefinitionPermissionEvaluator"/>
            </set>
        </property>
    </bean>

    <bean id="methodSecurityExpressionHandler"
          class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="roleHierarchy" ref="roleHierarchy"/>
        <property name="permissionEvaluator" ref="globalDefinitionPermissionEvaluator"/>
    </bean>

    <context:property-placeholder location="classpath*:/security.properties"
                                  ignore-resource-not-found="true"
                                  ignore-unresolvable="true"
                                  properties-ref="defaultSecurityConfiguration"/>

    <util:properties id="defaultSecurityConfiguration">
        <prop key="rolesHierarchy">
            ROLE_SUPERADMIN > ROLE_ADMIN
            ROLE_ADMIN > ROLE_USER
        </prop>
    </util:properties>

    <bean id="roleHierarchy"
          class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy" value="${rolesHierarchy}"/>
    </bean>

    <bean id="loginUrlAuthenticationEntryPoint"
          class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <property name="loginFormUrl" value="/login.html"/>
    </bean>

    <bean id="accessDeniedHandler"
          class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
        <property name="errorPage" value="/error.html?code=403"/>
    </bean>

    <bean id="mySessionExpirationFilter"
          class="com.qcadoo.security.internal.filters.SessionExpirationFilter"/>

    <bean id="loginAttemptService" class="com.qcadoo.security.internal.LoginAttemptService">
        <property name="lockAccountTimeMinutes" value="${lockAccountTimeMinutes:1440}"/>
        <property name="maxUnsuccessfullAttempts" value="${maxUnsuccessfullAttempts:3}"/>
        <property name="lockAccountMode" value="${lockAccountMode:IP}"/>
    </bean>

    <bean id="concurrencyFilter"
          class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <property name="sessionRegistry" ref="sessionRegistry"/>
        <property name="expiredUrl" value="/login.html?timeout=true"/>
    </bean>

    <bean id="contentSecurityPolicyFilter" class="com.qcadoo.security.internal.filters.ContentSecurityPolicyFilter">
        <property name="responseHeaderXSSProtection" value="${responseHeaderXSSProtection}"/>
        <property name="responseHeaderContentSecurityPolicy" value="${responseHeaderContentSecurityPolicy}"/>
        <property name="includeSandboxForFrames" value="${includeSandboxCSP}"/>
    </bean>

    <bean id="customAuthenticationFilter"
          class="com.qcadoo.security.internal.filters.CustomAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureHandler" ref="failureHandler"/>
        <property name="authenticationSuccessHandler" ref="successHandler"/>
        <property name="rememberMeServices" ref="rememberMeServices"/>
        <property name="sessionAuthenticationStrategy" ref="sas"/>
    </bean>

    <bean id="sas"
          class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                    <property name="maximumSessions" value="1"/>
                </bean>
                <bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
                </bean>
                <bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="sessionRegistry"
          class="org.springframework.security.core.session.SessionRegistryImpl"/>

    <bean id="successHandler"
          class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="/login.html"/>
    </bean>

    <bean id="failureHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <property name="defaultFailureUrl" value="/login.html?login_error=error"/>
    </bean>

</beans>