<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo Framework
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	  xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd" name="dictionaryItemDetails"
	  modelPlugin="qcadooModel" modelName="dictionaryItem" defaultAuthorizationRole="ROLE_DICTIONARY_VIEW">

	<component type="window" name="window" reference="window">

		<ribbon>
			<template name="standardFormTemplate" excludeItems="actions.delete,actions.copy"/>
		</ribbon>

		<component type="form" name="dictionaryItem" reference="form">
			<script>
				<![CDATA[
					var save = #{window}.getRibbonItem("actions.save");
					var saveBack = #{window}.getRibbonItem("actions.saveBack");
					var saveNew = #{window}.getRibbonItem("actions.saveNew");
					var cancel = #{window}.getRibbonItem("actions.cancel");

					var activateButton = #{window}.getRibbonItem("states.activate");
					var deactivateButton = #{window}.getRibbonItem("states.deactivate");

					this.addOnChangeListener({
						onSetValue: function(value) {
							if (! value || ! value.content) {
								return;
							}
							save.enable();
							saveBack.enable();
							saveNew.enable();
							
							if (! value.content.entityId) {
								cancel.disable();
								return;
							}
							
							cancel.enable();
							
							var externalNumber = #{externalNumber}.getValue().content.value;
							
							if (externalNumber != undefined && externalNumber != '') {
								save.disable("#{translate(qcadooDictionaries.dictionaryItem.ribbon.message.dictionaryItemIsExternal)}");
								saveBack.disable("#{translate(qcadooDictionaries.dictionaryItem.ribbon.message.dictionaryItemIsExternal)}");
								saveNew.disable("#{translate(qcadooDictionaries.dictionaryItem.ribbon.message.dictionaryItemIsExternal)}");
								cancel.disable("#{translate(qcadooDictionaries.dictionaryItem.ribbon.message.dictionaryItemIsExternal)}");
								activateButton.disable("#{translate(qcadooDictionaries.dictionaryItem.ribbon.message.dictionaryItemIsExternal)}");
								deactivateButton.disable("#{translate(qcadooDictionaries.dictionaryItem.ribbon.message.dictionaryItemIsExternal)}");
							}
						}
					});
				]]>
			</script>

			<component type="gridLayout" name="gridLayout" columns="3"
					   rows="4">
				<layoutElement column="1" row="1">
					<component type="input" name="name" field="name" reference="name"/>
					<component type="hidden" name="externalNumber" field="externalNumber" reference="externalNumber"/>
				</layoutElement>
				<layoutElement column="1" row="2" height="2">
					<component type="textarea" name="description" field="description"/>
				</layoutElement>
				<layoutElement column="1" row="4">
					<component type="checkbox" name="isInteger" field="isInteger" reference="isInteger" defaultVisible="false"/>
				</layoutElement>
			</component>

			<option type="header" value="true"/>
			<option type="expression" value="'@' + #dictionary[pluginIdentifier] + '.' + #dictionary[name] + '.dictionary' + ' / ' + #name"/>
		</component>
	</component>

	<hooks>
		<beforeRender class="com.qcadoo.plugins.dictionaries.internal.hooks.DictionaryItemDetailsHooks"
					  method="disableDictionaryItemFormForExternalItems"/>
		<beforeRender class="com.qcadoo.plugins.dictionaries.internal.hooks.DictionaryItemDetailsHooks"
					  method="blockedActivationOptionWhenDictionaryWasAddFromSystem"/>
		<beforeRender class="com.qcadoo.plugins.dictionaries.internal.hooks.DictionaryItemDetailsHooks"
					  method="disableNameEdit"/>
		<beforeRender class="com.qcadoo.plugins.dictionaries.internal.hooks.DictionaryItemDetailsHooks"
					  method="showIntegerCheckbox"/>
	</hooks>

</view>