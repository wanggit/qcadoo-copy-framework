<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo Framework
    Version: 1.2.0

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- PLUGIN -->

	<util:properties id="plugin">
		<prop key="restartCommand"></prop>
		<prop key="pluginsPath"></prop>
		<prop key="pluginsTmpPath"></prop>
		<prop key="descriptors">model/integration/*/qcadoo-plugin.xml</prop>
	</util:properties>

	<context:component-scan base-package="com.qcadoo.tenant" />
	
	<context:component-scan base-package="com.qcadoo.plugin" />

	<context:component-scan base-package="com.qcadoo.model" />

	<bean class="com.qcadoo.model.integration.MockPasswordEncoder" />
	
	<bean class="com.qcadoo.model.integration.MockTranslationService" />
	
	<bean class="com.qcadoo.model.integration.MockHook" />
	
	<bean class="com.qcadoo.model.integration.VerifyHooks" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:mes;create=true" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="sessionFactory" class="com.qcadoo.model.internal.sessionfactory.DynamicSessionFactoryBeanImpl">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.hbm2ddl.import_files">/test_import.sql</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/>
	
	<bean class="com.qcadoo.plugin.internal.module.DefaultModuleFactoryAccessor">
		<property name="moduleFactories">
			<list>
				<bean class="com.qcadoo.model.internal.module.ModelModuleFactory" />
				<bean class="com.qcadoo.model.internal.module.FieldModuleFactory" />
				<bean class="com.qcadoo.model.internal.module.HookModuleFactory" />
				<bean class="com.qcadoo.model.internal.module.HibernateModuleFactory" />
				<bean class="com.qcadoo.model.internal.module.EnumValueModuleFactory" />
				<bean class="com.qcadoo.model.internal.module.DictionaryModuleFactory" />
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- qcadoo-plugin's transaction manager & dependencies bean definitions below - necessary for integration tests -->
	<bean id="pluginDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:mes;create=true" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="pluginSessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<qualifier value="plugin" />
		<property name="dataSource" ref="pluginDataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.qcadoo.model.beans.qcadooPlugin.QcadooPluginPlugin</value>
			</list>
		</property>
	</bean>

	<bean id="pluginTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<qualifier value="plugin" />
		<property name="sessionFactory" ref="pluginSessionFactory" />
	</bean>
	<!-- end of qcadoo-plugin's transaction manager & dependencies bean definitions --> 

</beans>